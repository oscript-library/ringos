#Использовать asserts
#Использовать fs
#Использовать "../../../internal/localization"
#Использовать "../../../internal/utils"

#Область ОписаниеПеременных

Перем КаталогРабочейОбласти; // Каталог рабочей области
Перем ФайлРезультатаПроверки; // TSV файл с результатами проверки
Перем КаталогиПроектов; // Каталоги проектов для проверки
Перем ИменаПроектов; // Имена проектов для проверки

Перем ЛокализованныеСтроки; // Локализованные строки

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Устанавливает каталог рабочей области
//
// Параметры:
//   ИмяКаталога - Строка - Каталог рабочего пространства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   ПараметрыПроверкиEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогРабочейОбласти(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	КаталогРабочейОбласти = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает файл в который будут заисаны результаты проверки
//
// Параметры:
//   ФайлРезультата - Строка - Файл для записи результатов валидации в формате TSV.
//
//  Возвращаемое значение:
//   ПараметрыПроверкиEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьФайлРезультата(ФайлРезультата) Экспорт
	
	Ожидаем.Что(ФайлРезультата,
		ЛокализованныеСтроки.ИсключениеФайлРезультатаТип).ИмеетТип("Строка");
	Ожидаем.Что(ФайлРезультата,
		ЛокализованныеСтроки.ИсключениеФайлРезультатаЗаполненность).Заполнено();
	
	ФайлРезультатаПроверки = ФС.ПолныйПуть(ФайлРезультата);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет указанный каталог в список проектов для проверки
//
// Параметры:
//   КаталогПроекта - Строка - Каталог с проверяемым проектом
//
//  Возвращаемое значение:
//   ПараметрыПроверкиEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ДобавитьКаталогПроекта(КаталогПроекта) Экспорт
	
	Ожидаем.Что(КаталогПроекта,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(КаталогПроекта,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаЗаполненность).Заполнено();
	
	ПолныйПуть = ФС.ПолныйПуть(КаталогПроекта);
	КаталогиПроектов.Добавить(ПолныйПуть);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет проект с указанным именем в список проектов для проверки.
//
// Параметры:
//   ИмяПроекта - Строка - Имя проверяемого проекта
//
//  Возвращаемое значение:
//   ПараметрыПроверкиEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ДобавитьИмяПроекта(ИмяПроекта) Экспорт
	
	Ожидаем.Что(ИмяПроекта,
		ЛокализованныеСтроки.ИсключениеИмяПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяПроекта,
		ЛокализованныеСтроки.ИсключениеИмяПроектаЗаполненность).Заполнено();
	
	ИменаПроектов.Добавить(ИмяПроекта);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Каталог рабочего пространства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - имя каталога
//
Функция КаталогРабочейОбласти() Экспорт
	Возврат КаталогРабочейОбласти;
КонецФункции

// Файл для записи результатов валидации в формате TSV.
//
//  Возвращаемое значение:
//   Строка - имя файла
//
Функция ФайлРезультата() Экспорт
	Возврат ФайлРезультатаПроверки;
КонецФункции

// Список каталогов с проверямыми проектами
//
//  Возвращаемое значение:
//   Массив Из Строка - Имена каталогов
//
Функция КаталогиПроектов() Экспорт
	Возврат КаталогиПроектов;
КонецФункции

// Список имен проверямых проектов
//
//  Возвращаемое значение:
//   Массив Из Строка - Имена проектов
//
Функция ИменаПроектов() Экспорт
	Возврат Новый ФиксированныйМассив(ИменаПроектов);
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнение() Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Ожидаем.Что(КаталогРабочейОбласти,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	Ожидаем.Что(ФайлРезультатаПроверки,
		ЛокализованныеСтроки.ИсключениеФайлРезультатаЗаполненность).Заполнено();
	
	Ожидаем.Что(ФС.ФайлСуществует(ФайлРезультатаПроверки),
		ЛокализованныеСтроки.ИсключениеФайлРезультатаОтсутствие).ЕстьЛожь();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогиПроектов) И ЗначениеЗаполнено(ИменаПроектов),
		ЛокализованныеСтроки.ИсключениеУказаныКаталогИИмяПроекта).ЕстьЛожь();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогиПроектов) ИЛИ ЗначениеЗаполнено(ИменаПроектов),
		ЛокализованныеСтроки.ИсключениеКаталогИИмяПроектаОтсутствуют).ЕстьИстина();
	// BSLLS:NestedFunctionInParameters-on
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта()
	
	КаталогРабочейОбласти = "";
	ФайлРезультатаПроверки = "";
	КаталогиПроектов = Новый Массив;
	ИменаПроектов = Новый Массив;
	
	ЛокализованныеСтроки = ПараметрыПриложения.ЛокализованныеСтроки(Локализация_МодульEDT);
	
КонецПроцедуры

#КонецОбласти