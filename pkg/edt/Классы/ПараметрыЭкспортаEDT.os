#Использовать asserts
#Использовать fs
#Использовать "../../../internal/localization"
#Использовать "../../../internal/utils"

#Область ОписаниеПеременных

Перем КаталогФайловКонфигурации; // Каталог для экспорта файлов
Перем КаталогРабочейОбласти; // Каталог рабочей области
Перем КаталогПроекта; // Каталог проекта для экспорта
Перем ИмяПроекта; // Имя проекта для экспорта

Перем ЛокализованныеСтроки; // Локализованные строки

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Устанавливает каталог в который будут экспортированы файлы проекта
//
// Параметры:
//   ИмяКаталога - Строка - Каталог для экспорта файлов конфигурации платформы 1С:Предприятия.
//
//  Возвращаемое значение:
//   ПараметрыЭкспортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогФайловКонфигурации(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииЗаполненность).Заполнено();
	
	КаталогФайловКонфигурации = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает каталог рабочей области
//
// Параметры:
//   ИмяКаталога - Строка - Каталог рабочего пространства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   ПараметрыЭкспортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогРабочейОбласти(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	КаталогРабочейОбласти = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устнавливает каталог, содержащий экспортируемый проект
//
// Параметры:
//   ИмяКаталога - Строка - Каталог, содержащий экспортируемый проект 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   ПараметрыЭкспортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогПроекта(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаЗаполненность).Заполнено();
	
	КаталогПроекта = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устнавливает имя экспортируемого проекта.
//
// Параметры:
//   ИмяПроектаЭкспорт - Строка - Имя проекта 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   ПараметрыЭкспортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьИмяПроекта(ИмяПроектаЭкспорт) Экспорт
	
	Ожидаем.Что(ИмяПроектаЭкспорт,
		ЛокализованныеСтроки.ИсключениеИмяПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяПроектаЭкспорт,
		ЛокализованныеСтроки.ИсключениеИмяПроектаЗаполненность).Заполнено();
	
	ИмяПроекта = ИмяПроектаЭкспорт;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Каталог для экспорта файлов конфигурации платформы 1С:Предприятия.
//
//  Возвращаемое значение:
//   Строка - Имя каталога
//
Функция КаталогФайловКонфигурации() Экспорт
	Возврат КаталогФайловКонфигурации;
КонецФункции

// Каталог рабочего пространства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - Имя каталога
//
Функция КаталогРабочейОбласти() Экспорт
	Возврат КаталогРабочейОбласти;
КонецФункции

// Каталог, содержащий экспортируемый проект 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - Имя каталога
//
Функция КаталогПроекта() Экспорт
	Возврат КаталогПроекта;
КонецФункции

// Имя проекта 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - Имя проекта
//
Функция ИмяПроекта() Экспорт
	Возврат ИмяПроекта;
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнение() Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Ожидаем.Что(КаталогФайловКонфигурации,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииЗаполненность).Заполнено();
	
	Ожидаем.Что(КаталогРабочейОбласти,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогПроекта) И ЗначениеЗаполнено(ИмяПроекта),
		ЛокализованныеСтроки.ИсключениеУказаныКаталогИИмяПроекта).ЕстьЛожь();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогПроекта) ИЛИ ЗначениеЗаполнено(ИмяПроекта),
		ЛокализованныеСтроки.ИсключениеКаталогИИмяПроектаОтсутствуют).ЕстьИстина();
	// BSLLS:NestedFunctionInParameters-on
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта()
	
	КаталогФайловКонфигурации = "";
	КаталогРабочейОбласти = "";
	КаталогПроекта = "";
	ИмяПроекта = "";
	
	ЛокализованныеСтроки = ПараметрыПриложения.ЛокализованныеСтроки(Локализация_МодульEDT);
	
КонецПроцедуры

#КонецОбласти